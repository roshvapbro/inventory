package com.vapbro.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;

import com.vapbro.model.SalesOrder;
import com.vapbro.util.DBUtil;

public class SalesOrderDBdao implements SalesOrderDao {

	@Override
	public List<SalesOrder> getAllSalesOrders() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public SalesOrder getSalesOrder(Integer id) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void update(SalesOrder so) {
		// TODO Auto-generated method stub

	}

	@Override
	public void insert(SalesOrder so) {
		writeIntoDatabase(so);
	}

	@Override
	public void delete(Integer id) {

		try {
			deletefromDB(id);
		} catch (SQLException e) {
			e.printStackTrace();
		}

	}

	public void writeIntoDatabase(SalesOrder so) {
		Connection conn = null;
		String name = "";
		PreparedStatement ps = null;
		PreparedStatement ps2 = null;

		try {
			conn = DBUtil.getDBConnection();

			String insertTableSQL = "INSERT INTO sales_order"
					+ "(Sales_Order_Date,Sales_Order_Price,Sales_Order_Status) VALUES"
					+ "(?,?,?)";

			ps = conn.prepareStatement(insertTableSQL,
					Statement.RETURN_GENERATED_KEYS);
			ps.setDate(1, so.getDate());
			ps.setDouble(2, so.getPrice());
			ps.setString(3, so.getStatus());
			ps.executeUpdate();

			ResultSet tableKeys = ps.getGeneratedKeys();
			tableKeys.next();
			int autoGeneratedID = tableKeys.getInt(1);
			System.out.println("autogeneratedkey::" + autoGeneratedID);

			if (autoGeneratedID > 0) {

				String insertTableSQL2 = "INSERT INTO sales_order_product_list"
						+ "(Sales_Order_ID,Product_ID,Net_Price) VALUES"
						+ "(?,?,?)";

				ps2 = conn.prepareStatement(insertTableSQL2);
				ps2.setInt(1, autoGeneratedID);
				ps2.setInt(2, so.getProductId());
				ps2.setDouble(3, so.getPrice());
				ps2.executeUpdate();

			}

		} catch (Exception e) {
			e.printStackTrace();
		} finally {

			if (ps != null) {
				try {
					ps.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			if (ps2 != null) {
				try {
					ps2.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}

			if (conn != null) {
				try {
					conn.close();
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		}

	}

	public void deletefromDB(int id) throws SQLException {
		Connection dbConnection = null;
		PreparedStatement preparedStatement = null;

		String deleteSQL = "DELETE FROM sales_order WHERE Sales_Order_ID = ?";

		try {
			dbConnection = DBUtil.getDBConnection();
			preparedStatement = dbConnection.prepareStatement(deleteSQL);
			preparedStatement.setInt(1, id);
			preparedStatement.executeUpdate();
			System.out.println("SalesOrder Record with id " + id
					+ " is deleted!");

			deleteFromSalesOrderProductList(id);

		} catch (SQLException e) {

			System.out.println(e.getMessage());

		} finally {

			if (preparedStatement != null) {
				preparedStatement.close();
			}

			if (dbConnection != null) {
				dbConnection.close();
			}

		}

	}

	public void deleteFromSalesOrderProductList(int salesOrderId) throws SQLException {
		Connection dbConnection = null;
		PreparedStatement preparedStatement = null;

		String deleteSQL = "DELETE FROM sales_order_product_list WHERE Sales_Order_ID = ?";

		try {
			dbConnection = DBUtil.getDBConnection();
			preparedStatement = dbConnection.prepareStatement(deleteSQL);
			preparedStatement.setInt(1, salesOrderId);
			preparedStatement.executeUpdate();
			System.out.println("sales_order_product_list Record with id " + salesOrderId
					+ " is deleted!");

			//deleteFromSalesOrderProductList(salesOrderId);

		} catch (SQLException e) {

			System.out.println(e.getMessage());

		} finally {

			if (preparedStatement != null) {
				preparedStatement.close();
			}

			if (dbConnection != null) {
				dbConnection.close();
			}

		}

	}

}
